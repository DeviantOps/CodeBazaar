function [theta, J_history] = gradientDescent(X, y, theta, alpha, num_iters)

  m = length(y);

  J_history = zeros(num_iters, 1);

  for iter = 1:num_iters

      theta = theta - (alpha / m) * (X' * (sigmoid(X * theta) - y));

      J_history(iter) = computeCost(X, y, theta);

  end

endfunction

 

function g = sigmoid(z)

  g = 1 ./ (1 + exp(-z));

endfunction

 

function J = computeCost(X, y, theta)

  m = length(y);

  h = sigmoid(X * theta);

  J = -1 / m * (y' * log(h) + (1 - y)' * log(1 - h));

endfunction
